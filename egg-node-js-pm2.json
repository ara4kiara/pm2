{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2024-03-19T00:00:00+00:00",
    "name": "Node.js with PM2",
    "author": "ar4kiara@gmail.com",
    "description": "Node.js egg with PM2 process manager, Python3, pip3, and Chromium support",
    "features": null,
    "docker_images": {
        "Node.js 18 with PM2": "ghcr.io/ar4kiara/nodejs-pm2:18",
        "Node.js 20 with PM2": "ghcr.io/ar4kiara/nodejs-pm2:20",
        "Node.js 22 with PM2": "ghcr.io/ar4kiara/nodejs-pm2:22"
    },
    "file_denylist": [],
    "startup": "if [[ -d .git ]] && [[ {{AUTO_UPDATE}} == \"1\" ]]; then git pull; fi; if [[ ! -z ${NODE_PACKAGES} ]]; then /usr/local/bin/npm install ${NODE_PACKAGES}; fi; if [[ ! -z ${PYTHON_PACKAGES} ]]; then pip3 install ${PYTHON_PACKAGES}; fi; if [ -f /home/container/package.json ]; then /usr/local/bin/npm install; fi; if [ ! -f /home/container/{{CMD_RUN}} ] && [[ ! {{CMD_RUN}} =~ ^/usr/local/bin/npm ]]; then echo \"Error: File {{CMD_RUN}} not found\"; exit 1; fi; pm2 start {{CMD_RUN}} --no-daemon",
    "config": {
        "files": "{}",
        "startup": "{\n    \"done\": \"PM2 process started\"\n}",
        "logs": "{}",
        "stop": "^^C"
    },
    "scripts": {
        "installation": {
            "script": "#!/bin/bash\n# NodeJS App Installation Script\n#\n# Server Files: /mnt/server\napt update\napt install -y git curl jq file unzip make gcc g++ python3 python3-dev python3-pip libtool chromium chromium-driver\n\necho -e \"updating npm. please wait...\"\n\nmkdir -p /mnt/server\ncd /mnt/server\n\n## add git ending if it's not on the address\nif [[ ${GIT_ADDRESS} != *.git ]]; then\n    GIT_ADDRESS=${GIT_ADDRESS}.git\nfi\n\n## pull git js repo\nif [ \"$(ls -A /mnt/server)\" ]; then\n    echo -e \"/mnt/server directory is not empty.\"\n    if [ -d .git ]; then\n        echo -e \".git directory exists\"\n        if [ -f .git/config ]; then\n            echo -e \"loading info from git config\"\n            ORIGIN=$(git config --get remote.origin.url)\n        else\n            echo -e \"files found with no git config\"\n            echo -e \"closing out without touching things to not break anything\"\n            exit 10\n        fi\n    fi\n\n    if [ \"${ORIGIN}\" == \"${GIT_ADDRESS}\" ]; then\n        echo \"pulling latest from github\"\n        git pull\n    fi\nelse\n    echo -e \"/mnt/server is empty.\\ncloning files into repo\"\n    if [ -z ${BRANCH} ]; then\n        echo -e \"cloning default branch\"\n        git clone ${GIT_ADDRESS} .\\n    else\\n        echo -e \"cloning ${BRANCH}'\"\n        git clone --single-branch --branch ${BRANCH} ${GIT_ADDRESS} .\\n    fi\nfi\n\necho \"Installing nodejs packages\"\nif [[ ! -z ${NODE_PACKAGES} ]]; then\n    /usr/local/bin/npm install ${NODE_PACKAGES}\nfi\n\nif [ -f /mnt/server/package.json ]; then\n    /usr/local/bin/npm install --production\nfi\n\nif [[ ! -z ${PYTHON_PACKAGES} ]]; then\n    pip3 install ${PYTHON_PACKAGES}\nfi\n\necho -e \"install complete\"\nexit 0",
            "container": "node:18-bullseye-slim",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Git Repo Address",
            "description": "GitHub Repo to clone\n\nI.E. https://github.com/username/repo_name",
            "env_variable": "GIT_ADDRESS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Install Branch",
            "description": "The branch to install.",
            "env_variable": "BRANCH",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Startup Command",
            "description": "Perintah untuk memulai aplikasi. Contoh: 'index.js' atau 'npm start'",
            "env_variable": "CMD_RUN",
            "default_value": "index.js",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:50",
            "field_type": "text"
        },
        {
            "name": "Additional Node packages",
            "description": "Install additional node packages.\n\nUse spaces to separate.",
            "env_variable": "NODE_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Additional Python packages",
            "description": "Install additional Python packages.\n\nUse spaces to separate.",
            "env_variable": "PYTHON_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Auto Update",
            "description": "Pull the latest files on startup when using a GitHub repo.",
            "env_variable": "AUTO_UPDATE",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        }
    ]
}
